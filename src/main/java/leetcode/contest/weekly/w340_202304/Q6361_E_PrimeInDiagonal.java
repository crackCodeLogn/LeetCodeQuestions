package leetcode.contest.weekly.w340_202304;

/**
 * @author Vivek
 * @since 2023-04-09
 */
public class Q6361_E_PrimeInDiagonal {

    public static void main(String[] args) {
        Q6361_E_PrimeInDiagonal q6361EPrimeInDiagonal = new Q6361_E_PrimeInDiagonal();

        System.out.println(q6361EPrimeInDiagonal.diagonalPrime(new int[][]{
                {1, 0, 5},
                {7, 11, 4},
                {17, 1, 1}
        }));


        System.out.println(q6361EPrimeInDiagonal.diagonalPrime(new int[][]{
                {261, 341, 68, 506, 881, 269, 966, 845, 311, 792, 418, 394, 830, 393, 64, 168, 657, 958, 131},
                {245, 294, 747, 850, 343, 57, 965, 37, 493, 428, 145, 504, 912, 885, 617, 735, 84, 690, 716},
                {156, 830, 362, 422, 37, 627, 478, 396, 470, 49, 104, 483, 797, 156, 21, 34, 613, 633, 136},
                {646, 332, 108, 717, 563, 665, 355, 200, 393, 803, 796, 797, 503, 114, 903, 62, 625, 718, 479},
                {630, 648, 957, 346, 667, 128, 993, 699, 731, 637, 304, 808, 870, 131, 982, 934, 397, 819, 301},
                {939, 764, 894, 981, 698, 830, 125, 532, 882, 805, 194, 40, 801, 402, 456, 381, 775, 196, 467},
                {366, 809, 648, 78, 980, 46, 924, 957, 41, 498, 262, 923, 28, 968, 533, 683, 583, 586, 897},
                {222, 236, 96, 795, 840, 906, 911, 643, 799, 515, 716, 537, 431, 520, 313, 969, 117, 150, 437},
                {914, 580, 433, 946, 87, 959, 108, 426, 65, 102, 426, 793, 160, 752, 978, 32, 811, 458, 442},
                {703, 428, 31, 509, 942, 885, 986, 333, 740, 259, 81, 361, 73, 125, 368, 709, 31, 354, 357},
                {183, 11, 851, 998, 237, 839, 375, 73, 611, 915, 147, 213, 4, 210, 675, 690, 750, 961, 923},
                {127, 766, 8, 301, 378, 707, 26, 956, 620, 239, 880, 146, 192, 465, 116, 489, 353, 725, 983},
                {265, 134, 29, 990, 214, 371, 344, 485, 984, 300, 304, 960, 900, 982, 567, 652, 335, 189, 608},
                {83, 106, 547, 595, 316, 161, 386, 920, 151, 969, 129, 824, 229, 324, 521, 249, 243, 773, 189},
                {299, 382, 430, 680, 48, 882, 136, 616, 22, 404, 80, 720, 75, 136, 431, 307, 564, 427, 759},
                {949, 146, 606, 433, 306, 653, 364, 87, 255, 456, 648, 379, 653, 972, 542, 60, 386, 419, 9},
                {428, 986, 746, 923, 329, 452, 209, 381, 301, 976, 483, 94, 974, 190, 816, 112, 284, 115, 572},
                {621, 705, 158, 815, 720, 457, 951, 409, 190, 787, 432, 443, 179, 254, 983, 465, 349, 960, 536},
                {146, 364, 474, 647, 653, 89, 495, 774, 209, 302, 2, 851, 716, 460, 634, 474, 8, 224, 306}
        })); // should be 643
        System.out.println(q6361EPrimeInDiagonal
                .isPrime(982));
    }

    private boolean isPrime(int n) {
        if (n == 1) return false;
        if (n <= 3) return true;
        if (n % 2 == 0) return false;
        for (int i = 3; i <= Math.sqrt(n); i++) if (n % i == 0) return false;
        return true;
    }

    public int diagonalPrime(int[][] nums) {
        int r = nums.length, c = nums[0].length;
        int val = 0;
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                if (i == j || i + j == r - 1) if (isPrime(nums[i][j]) && nums[i][j] > val) val = nums[i][j];
            }
        }
        return val;
    }
}
